prepend : PrependNode
    description:
        prepend a prefix element to this list or string

    inputs:
        in: list, str, scalar, array

    arguments:
        <list, str, bool, number> : the value to prepend to the input

    properties:
        prefix : str : str to prepend to the input

    options:
        always output list <bool> : if True, output list with prefix as first element

    output:
        list input: output a list [prefix input_list]
        str input:
            'always output list' is False : output a str of 'prefix input'
            'always output list' is True : output a list [prefix input_str]
        scalar input: output a list [prefix input_scalar]
        array input: convert the array to a list and output a list [prefix input_array_values]


append : AppendNode
    description:
        append a suffix element to this list or string

    inputs:
        in: list, str, scalar, array

    arguments:
        <list, str, bool, number> : the value to append to the input

    properties:
        suffix : str : str to append to the input

    options:
        always output list <bool> : if True, output list with suffix as last element

    output:
        list input: output a list [input_list suffix]
        str input:
            'always output list' is False : output a str of 'input suffix'
            'always output list' is True : output a list [input_str suffix]
        scalar input: output a list [input_scalar suffix]
        array input: convert the array to a list and output a list [input_array_values suffix]


type : TypeNode
    description:
        reports type of received input

    inputs:
        in: anything

    properties:
        type : str : shows type of the input
            float, int, bang, string, list[length], bool, array[shape], tensor[shape], numpy.double, numpy.float32, numpy.int64, numpy.bool_


info : InfoNode
    description:
        reports type and additional info of received input

    inputs:
        in: anything

    properties:
        info : str : shows type of the input
            float, int, bang, numpy.double, numpy.float32, numpy.int64, numpy.bool_: type name
            list input: list[length]
            string: str
            array: array[shape] dtype
            tensor: tensor[shape] dtype device requires_grad


array : ArrayNode
    description:
        convert input into an array

    inputs:
        in: anything (triggers)

    properties: (optional)
        shape: a list of numbers separated by spaces or commas
            if empty, then the input is not reshaped

    outputs:
        array out:
            any input is converted into a numpy array. If a shape is supplied the array is reshaped before output


string : StringNode
    description:
        convert input into a string

    inputs:
        in: anything (triggers)

    outputs:
        string out:
            any input is converted into a string and output


list : ListNode
    description:
        convert input into a list

    inputs:
        in: anything (triggers)

    outputs:
        string out:
            any input is converted into a list and output
            for scalar inputs, a single element list is output


counter : CounterNode
    description:
        counts input events, wrapping at maximum and signalling end of count

    inputs:
        input: (triggers) increments count on each input event

        count: sets the count maximum

        step: sets the increment step per input event

    outputs:
        count out: the current count is output for every input event

        carry out: outputs 1 when the count maximum - 1 is achieved
            outputs 0 when counter wraps back to 0

coll
dict
combine
kombine
delay
select
route
gate
switch
metro
unpack
pack
pak
repeat
timer
elapsed
decode
t
var
send
receive
s
r
ramp
fifo_string
bucket_brigade
tick
comment
fuzzy_match
length
time_between
word_replace
split
join